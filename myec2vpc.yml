- hosts: localhost
  vars:
    region: us-east-1
    image_id:  ami-09e67e426f25ce0d7
    instance_type: t3.micro
    project_name: easypay
    app_code_user: ubuntu
    env: staging
    hoststring: ansible_ssh_user=ubuntu ansible_ssh_private_key_file=../aws-private.pem
    hostpath: '../hosts'
  tasks:
    - name: creating vpc
      ec2_vpc_net:
        name: ma-vpc
        cidr_block: 172.10.0.0/16
        region: '{{region}}'
        state: present
      register: vpc
    - name: creating subnet in aws
      ec2_vpc_subnet:
        vpc_id: '{{vpc.vpc.id}}'
        az: '{{region}}f'
        cidr: 172.10.1.0/24
        map_public: 'yes'
        tags:
          Name: subnet-ma_new
        state: present
        region: '{{region}}'
      register: subnet
    - name: creating igw
      ec2_vpc_igw:
        vpc_id: '{{vpc.vpc.id}}'
        state: present
        region: '{{region}}'
        tags:
          Name: igw-ma
      register: igw
    - name: creating route table
      ec2_vpc_route_table:
        vpc_id: '{{vpc.vpc.id}}'
        region: '{{region}}'
        tags:
          Name: route-ma
        subnets:
          - '{{subnet.subnet.id}}'
        routes:
          - dest: 0.0.0.0/0
            gateway_id: '{{igw.gateway_id}}'
        state: present
      register: route_table
    - name: creating security group
      ec2_group:
        name: ma_sec_group
        description: creating for custom vpc
        region: '{{region}}'
        state: present
        vpc_id: '{{vpc.vpc.id}}'
        rules:
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
      register: sg
    - name: create an EC2 key
      ec2_key:
        name: '{{ project_name }}-{{ env }}-key'
        region: '{{ region }}'
      register: ec2_key
    - name: Save private key
      copy: content="{{ ec2_key.key.private_key }}" dest="../aws-private.pem" mode=0600
      when: ec2_key.changed      
    - name: Creating Master node in ec2 instance
      ec2:
        key_name: '{{ project_name }}-{{ env }}-key'
        instance_type: '{{instance_type}}'
        image: '{{image_id}}'
        region: '{{region}}'
        group_id: '{{sg.group_id}}'
        count: 1
        vpc_subnet_id: '{{subnet.subnet.id}}'
        wait: 'yes'
        instance_tags:
          Name: Master
        state: present
      register: master_node
    - name: Creating nodes in ec2 instance
      ec2:
        key_name: '{{ project_name }}-{{ env }}-key'
        instance_type: '{{instance_type}}'
        image: '{{image_id}}'
        region: '{{region}}'
        group_id: '{{sg.group_id}}'
        count: 3
        vpc_subnet_id: '{{subnet.subnet.id}}'
        assign_public_ip: 'yes'
        wait: 'yes'
        instance_tags:
          Name: Nodes
        state: present
      register: worker_nodes
    - name: Add the newly created EC2 Nodes instance(s) to host group
      lineinfile: 
        path: '{{hostpath}}'
        insertafter: EOF
        line: '{{ item.public_ip }}  {{hoststring}}'
        state: present
      with_items: '{{worker_nodes.instances}}'
    - name: Add the newly created EC2 Master instance(s) to nodes group
      lineinfile: 
        path: '{{hostpath}}'
        insertafter: EOF
        line: '{{ item.public_ip }}  {{hoststring}}'
        state: present
      with_items: '{{master_node.instances}}'
    - name: Add the newly created EC2 Master instance(s) to masters group
      lineinfile: 
        path: '{{hostpath}}'
        insertafter: EOF
        line: "[masters]\n# {{ item.public_ip }}  {{hoststring}}"
        state: present
      with_items: '{{master_node.instances}}'
    - wait_for: 'path={{ hostpath }} search_regex={{hoststring}}'
    - name: Wait for SSH to come up
      local_action: 'wait_for host={{ item.public_ip }} port=22 state=started'
      with_items: '{{master_node.instances}}'
    - name: Add IP to ec2_hosts group
      add_host: 'hostname={{ item.public_ip }} groups=ec2_hosts'
      with_items: '{{master_node.instances}}'
    - name: Wait for SSH to come up
      local_action: 'wait_for host={{ item.public_ip }} port=22 state=started'
      with_items: '{{worker_nodes.instances}}'
    - name: Add IP to ec2_hosts group
      add_host: 'hostname={{ item.public_ip }} groups=ec2_hosts'
      with_items: '{{worker_nodes.instances}}'
