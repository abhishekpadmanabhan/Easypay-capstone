- hosts: localhost
  vars:
    region: us-east-1
    image_id: ami-04d29b6f966df1537
    instance_type: t2.micro
    project_name: easypay
    app_code_user: ec2_user
    env: staging
    hoststring: ansible_ssh_user=ec2_user ansible_ssh_private_key_file=../aws-private.pem
    hostpath: ../hosts
  tasks:
    - name: creating vpc
      ec2_vpc_net:
        name: test
        cidr_block: 172.10.0.0/16
        region: '{{region}}'
        state: present
      register: vpc
    - name: creating subnet in aws
      ec2_vpc_subnet:
        vpc_id: '{{vpc.vpc.id}}'
        cidr: 172.10.1.0/24
        map_public: 'yes'
        tags:
          Name: subnet-ma
        state: present
        region: '{{region}}'
      register: subnet
    - name: creating igw
      ec2_vpc_igw:
        vpc_id: '{{vpc.vpc.id}}'
        state: present
        region: '{{region}}'
        tags:
          Name: igw-ma
      register: igw
    - name: creating route table
      ec2_vpc_route_table:
        vpc_id: '{{vpc.vpc.id}}'
        region: '{{region}}'
        tags:
          Name: route-ma
        subnets:
          - '{{subnet.subnet.id}}'
        routes:
          - dest: 0.0.0.0/0
            gateway_id: '{{igw.gateway_id}}'
        state: present
      register: route_table
    - name: creating security group
      ec2_group:
        name: ma_sec_group
        description: creating for custom vpc
        region: '{{region}}'
        state: present
        vpc_id: '{{vpc.vpc.id}}'
        rules:
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
      register: sg
    - name: create an EC2 key
      ec2_key:
        name: '{{ project_name }}-{{ env }}-key'
        region: '{{ region }}'
      register: ec2_key
    - name: Creating Master node in ec2 instance
      ec2:
        key_name: '{{ project_name }}-{{ env }}-key'
        instance_type: '{{instance_type}}'
        image: '{{image_id}}'
        region: '{{region}}'
        group_id: '{{sg.group_id}}'
        count: 1
        vpc_subnet_id: '{{subnet.subnet.id}}'
        wait: 'yes'
        instance_tags:
          Name: Master
        state: present
      register: ec2-master-node
    - name: Creating node1 in ec2 instance
      ec2:
        key_name: '{{ project_name }}-{{ env }}-key'
        instance_type: '{{instance_type}}'
        image: '{{image_id}}'
        region: '{{region}}'
        group_id: '{{sg.group_id}}'
        count: 1
        vpc_subnet_id: '{{subnet.subnet.id}}'
        assign_public_ip: 'yes'
        wait: 'yes'
        instance_tags:
          Name: Node1
        state: present
      register: ec2-woeker-node1
    - name: Creating node2 in ec2 instance
      ec2:
        key_name: '{{ project_name }}-{{ env }}-key'
        instance_type: '{{instance_type}}'
        image: '{{image_id}}'
        region: '{{region}}'
        group_id: '{{sg.group_id}}'
        count: 1
        vpc_subnet_id: '{{subnet.subnet.id}}'
        assign_public_ip: 'yes'
        wait: 'yes'
        instance_tags:
          Name: Node2
        state: present
      register: ec2-woeker-node2
    - name: Add the newly created EC2 instance(s) to host group
      lineinfile: >-
        dest={{ hostpath }} regexp={{ item.public_ip }}
        insertafter="[webserver]" line="{{ item.public_ip }} {{hoststring}}"
        state=present
      with_items: '{{ec2.instances}}'
    - wait_for: 'path={{ hostpath }} search_regex={{hoststring}}'
    - name: Wait for SSH to come up
      local_action: 'wait_for host={{ item.public_ip }} port=22 state=started'
      with_items: '{{ec2.instances}}'
    - name: Add IP to ec2_hosts group
      add_host: 'hostname={{ item.public_ip }} groups=ec2_hosts'
      with_items: '{{ec2.instances}}'
